Index: FiMa_Calculator/src/Calculator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\n\r\npublic class Calculator {\r\n    double interest;\r\n    double capital;\r\n    double startCapital;\r\n    double endCapital;\r\n    double interestRate;\r\n    int time;\r\n    double timeframe;\r\n    String resultType;\r\n\r\n\r\n    public static void main(String[] args) {\r\n        //System.out.println(getLinearInterest(100, 5,10));\r\n        String resultType;\r\n        switch (procedureTypeQuery()) {\r\n            case \"Lineare Zinsrechnung\": //\r\n                LinearProcedures linearProcedures =  new LinearProcedures();\r\n                resultType = resultQuery(new String[] {\"Zinsen\", \"Zinsen nach n Jahren\", \"Kapital nach n Jahren\"});\r\n                break;\r\n            case \"Dynamische Verfahren\": //\r\n                DynamicProcedures dynamicProcedures = new DynamicProcedures();\r\n                resultType = resultQuery(new String[] {\"firstOption\", \"secondOption\", \"thirdOption\"});\r\n                break;\r\n            case \"Tilgungsrechnung\": //\r\n                RepaymentCalculation repaymentCalculation = new RepaymentCalculation();\r\n                String typeOfRepaymentCalculation = queryTypeOfRepaymentCalculation();\r\n                if (typeOfRepaymentCalculation.equals(\"Ratenschuldtilgung\"))\r\n                {\r\n                    resultType = resultQuery(new String[] {\"Tilgungsrate\", \"Restschuld\", \"Zinsen\", \"Annuität\"});\r\n                }\r\n                else\r\n                {\r\n                    resultType = resultQuery(new String[] {\"Tilgungsbetrag\", \"Zinsbetrag\", \"Restschuld\", \"Laufzeit\"});\r\n                }\r\n\r\n                break;\r\n            default:\r\n                System.out.println(\"Error - procedureTypeQuery in switch\");\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * Eingabe über JOptionPan\r\n     */\r\n    private void multipleInput() {\r\n\t\tJTextField zahlenMaxField = new JTextField(5);\r\n\t\tJTextField zahlenZiehungField = new JTextField(5);\r\n\r\n\t\tJPanel myPanel = new JPanel();\r\n\t\tmyPanel.add(new JLabel(\"Capital:\"));\r\n\t\tmyPanel.add(zahlenMaxField);\r\n\t\tmyPanel.add(Box.createHorizontalStrut(15)); // a spacer\r\n\t\tmyPanel.add(new JLabel(\"Interest Rate:\"));\r\n\t\tmyPanel.add(zahlenZiehungField);\r\n        myPanel.add(new JLabel(\"Time (in years)::\"));\r\n        myPanel.add(zahlenZiehungField);\r\n\r\n\t\tint result = JOptionPane.showConfirmDialog(null, myPanel,\r\n\t\t\t\t\"Please Enter the two Values\", JOptionPane.OK_CANCEL_OPTION);\r\n\t\tif (result == JOptionPane.OK_OPTION) {\r\n\r\n\t\t\tcapital = Integer.parseInt(String.valueOf(zahlenMaxField));\r\n            interestRate = Integer.parseInt(String.valueOf(zahlenZiehungField));\r\n\t\t}\r\n\t}\r\n\r\n    /**\r\n     * Userabfrage, bei der erfragt wird, was berechnet werden soll.\r\n     */\r\n    public static String resultQuery(String[] options)\r\n    {\r\n        ImageIcon icon = new ImageIcon(\"src/images/calculatorImage.png\");\r\n        String resultType = (String)JOptionPane.showInputDialog(null, \"Was möchtest du berechnen?\",\r\n                \"Ergebnisabfrage\", JOptionPane.QUESTION_MESSAGE, icon, options, options[1]);\r\n        System.out.println(resultType);\r\n        return resultType;\r\n    }\r\n\r\n    /**\r\n     * Erste Userabfrage, bei der erfragt wird, um welchen Aufgabentyp es sich handelt.\r\n     * Mögliche Eingaben:\r\n     *      Lineare Zinsrechnung\r\n     *      Dynamische Verfahren\r\n     *      Tilgungsrechnung\r\n     */\r\n    public static String procedureTypeQuery()\r\n    {\r\n        String[] options = {\"Lineare Zinsrechnung\", \"Dynamische Verfahren\", \"Tilgungsrechnung\"};\r\n        ImageIcon icon = new ImageIcon(\"src/images/calculatorImage.png\");\r\n        String procedureType = (String)JOptionPane.showInputDialog(null, \"Um was für einen Verfahrenstypen handelt es sich?\",\r\n                \"Abfrage Verfahrenstypen\", JOptionPane.QUESTION_MESSAGE, icon, options, options[1]);\r\n        System.out.println(procedureType);\r\n        return procedureType;\r\n    }\r\n\r\n    public static String interestWarp(){\r\n        String[] options = {\"Vorschüssig\",\"Nachschüssig\"};\r\n        ImageIcon icon = new ImageIcon(\"src/images/calculatorImage.png\");\r\n        String InterestWarp = (String)JOptionPane.showInputDialog(null, \"Möchtest du vorschüssige oder nachschüssige Werte berechnen?\",\r\n                \"Abfrage Verfahrenstypen\", JOptionPane.QUESTION_MESSAGE, icon, options, options[1]);\r\n        System.out.println(InterestWarp);\r\n        return InterestWarp;\r\n    }\r\n\r\n    public static String queryTypeOfRepaymentCalculation(){\r\n        String[] options = {\"Ratenschuldtilgung\",\"Annuitaetentilgung\"};\r\n        ImageIcon icon = new ImageIcon(\"src/images/calculatorImage.png\");\r\n        String typeOfRepaymentCalculation = (String)JOptionPane.showInputDialog(null, \"Was für eine Art von Tilgungsrechnung möchtest du vornehmen?\",\r\n                \"Abfrage des Type der Tilgungsrechnung\", JOptionPane.QUESTION_MESSAGE, icon, options, options[0]);\r\n        System.out.println(typeOfRepaymentCalculation);\r\n        return typeOfRepaymentCalculation;\r\n    }\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/FiMa_Calculator/src/Calculator.java b/FiMa_Calculator/src/Calculator.java
--- a/FiMa_Calculator/src/Calculator.java	(revision 049933f170accdb0a59cd5b9193d5cbf43baf248)
+++ b/FiMa_Calculator/src/Calculator.java	(date 1638668660465)
@@ -112,6 +112,4 @@
         System.out.println(typeOfRepaymentCalculation);
         return typeOfRepaymentCalculation;
     }
-}
-
-
+}
\ No newline at end of file
Index: FiMa_Calculator/src/DynamicProcedures.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class DynamicProcedures {\r\n\r\n\r\n    public static void main(String[] args){\r\n\r\n    }\r\n    //gesucht Barwert K0, gegeben Kn\r\n    public double getDynamicStartCapitalEndCapital(double endCapital, double interestRate, int time){\r\n        return (endCapital * (1/Math.pow(interestRate+1, time)));\r\n\r\n    }\r\n    //gesucht Barwert K0, gegeben Annuität, vorschüssig\r\n    public double getDynamicStartCapitalAnnuityForwards(double interestRate, double annuity, int time){\r\n        return annuity * ((interestRate+1)*(Math.pow(interestRate+1, time)-1))/(Math.pow(interestRate+1, time)*(interestRate));\r\n    }\r\n\r\n    //gesucht Barwert K0, gegeben Annuität, nachschüssig\r\n    public double getDynamicStartCapitalAnnuityAfterwards(double interestRate, double annuity, int time){\r\n        return annuity * ((interestRate *(Math.pow(interestRate+1,time)-1))/(Math.pow(interestRate+1,time)*(interestRate)));\r\n    }\r\n\r\n    //gesucht Kn, gegeben K0\r\n    public double getDynamicEndCapitalStartCapital(double endCapital, double interestRate, int time){\r\n        return endCapital * Math.pow(interestRate+1, time);\r\n    }\r\n\r\n    //gesucht Kn, gegeben Annuität, vorschüssig\r\n    public double getDynamicEndCapitalAnnuityForwards(double endCapital, double interestRate, double annuity, int time){\r\n        return annuity * ((interestRate+1 *(Math.pow(interestRate+1,time))-1))/((interestRate+1)-1);\r\n    }\r\n\r\n    //gesucht Kn, gegeben Annuität, nachschüssig\r\n    public double getDynamicEndCapitalAnnuityAfterwards(double startCapital, double interestRate, double annuity, int time){\r\n       return annuity * ((Math.pow(interestRate+1,time)-1))/((interestRate+1)-1);\r\n    }\r\n\r\n    //gesucht A, gegeben K0 vorschüssig\r\n    public double getDynamicAnnuityStartCapitalAfterwards(double startCapital, double interestRate, int time){\r\n        return startCapital * ((Math.pow(interestRate+1,time)-1)*((interestRate+1)-1)/((interestRate+1)*(Math.pow(interestRate+1,time)-1)));\r\n    }\r\n\r\n    //gesucht A, gegeben K0 nachschüssig\r\n    public double getDynamicAnnuityStartCapitalForwards(double startCapital, double interestRate, int time){\r\n        return startCapital * ((Math.pow(interestRate+1,time)-1)*((interestRate+1)-1)/((Math.pow(interestRate+1,time))-1));\r\n    }\r\n\r\n    //gesucht A, gegeben Kn vorschüssig\r\n    public double getDynamicAnnuityEndCapitalForwards(double endCapital, double interestRate, int time){\r\n        return endCapital * (interestRate/((Math.pow(interestRate+1,time)-1)*(interestRate+1));\r\n    }\r\n\r\n    //gesucht A, gegeben Kn nachschüssig\r\n    public double getDynamicAnnuityEndCapitalAfterwards(double endCapital, double interestRate, int time){\r\n        return endCapital*(interestRate/Math.pow(interestRate+1,time)-1);\r\n    }\r\n\r\n    //gesucht q, gegeben Kn und K0\r\n    public double getDynamicInterestRate(double startCapital, double endCapital, int time){\r\n        return Math.pow((endCapital/startCapital),1/time);\r\n    }\r\n\r\n    //gesucht n, gegeben Kn und K0\r\n    public double getDynamicTimeEndStartCapital(double startCapital, double endCapital, double interestRate){\r\n        return ((Math.log(endCapital)-Math.log(startCapital))/Math.log(interestRate+1));\r\n    }\r\n\r\n    //gesucht n, gegeben Kn, A, nachschüssig\r\n    public double getDynamicTimeEndCapital(double endCapital, double interestRate, double annuity){\r\n        return Math.log((endCapital/annuity)*interestRate+1)/Math.log(interestRate+1);\r\n    }\r\n\r\n    //gesucht n, gegeben K0, A, nachschüssig\r\n    public double getDynamicTimeStartCapital(double startCapital, double interestRate, double annuity){\r\n        return (Math.log(annuity)-Math.log(annuity-startCapital*interestRate))/Math.log(interestRate+1);\r\n    }\r\n\r\n    //gesucht p, gegeben Kn, K0\r\n    public double getDynamicInterest(double interestRate){\r\n        return interestRate*100;\r\n    }\r\n    //p-q-Formel\r\n\r\n    //Ewige Rente\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/FiMa_Calculator/src/DynamicProcedures.java b/FiMa_Calculator/src/DynamicProcedures.java
--- a/FiMa_Calculator/src/DynamicProcedures.java	(revision 049933f170accdb0a59cd5b9193d5cbf43baf248)
+++ b/FiMa_Calculator/src/DynamicProcedures.java	(date 1638668664029)
@@ -46,7 +46,7 @@
 
     //gesucht A, gegeben Kn vorschüssig
     public double getDynamicAnnuityEndCapitalForwards(double endCapital, double interestRate, int time){
-        return endCapital * (interestRate/((Math.pow(interestRate+1,time)-1)*(interestRate+1));
+        return endCapital * (interestRate/((Math.pow(interestRate+1,time)-1)*(interestRate+1)));
     }
 
     //gesucht A, gegeben Kn nachschüssig
@@ -81,12 +81,6 @@
     //p-q-Formel
 
     //Ewige Rente
-
-
-
-
-
-
 }
 
 
